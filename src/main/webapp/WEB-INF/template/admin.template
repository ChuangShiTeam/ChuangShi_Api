package com.nowui.chuangshi.api.#(package_name).admin;


import com.jfinal.core.ActionKey;
import com.nowui.chuangshi.api.#(package_name).model.#(first_upper_model_name_without_underline);
import com.nowui.chuangshi.api.#(package_name).service.#(first_upper_model_name_without_underline)Service;
import com.nowui.chuangshi.common.annotation.ControllerKey;
import com.nowui.chuangshi.common.controller.Controller;

import com.nowui.chuangshi.constant.Constant;
import com.nowui.chuangshi.util.Util;

import java.util.List;

@ControllerKey("/admin/#(url_model_name)")
public class #(first_upper_model_name_without_underline)Controller extends Controller {

    @ActionKey("/admin/#(url_model_name)/list")
    public void list() {
        validateRequest(#for(column : searchColumnList)#(first_upper_model_name_without_underline).#(column.upper_column_name), #end Constant.PAGE_INDEX, Constant.PAGE_SIZE);

        #(first_upper_model_name_without_underline) model = getModel(#(first_upper_model_name_without_underline).class);
        String request_app_id = getRequest_app_id();

        Integer resultCount = #(first_upper_model_name_without_underline)Service.instance.adminCount(request_app_id#for(column : searchColumnList), model.get#(column.first_column_name)()#end);
        List<#(first_upper_model_name_without_underline)> resultList = #(first_upper_model_name_without_underline)Service.instance.adminList(request_app_id#for(column : searchColumnList), model.get#(column.first_column_name)()#end, getM(), getN());

        validateResponse(#(first_upper_model_name_without_underline).#(upper_primary_key), #for(column : listColumnList)#(first_upper_model_name_without_underline).#(column.upper_column_name), #end #(first_upper_model_name_without_underline).SYSTEM_VERSION);

        renderSuccessJson(resultCount, resultList);
    }

    @ActionKey("/admin/#(url_model_name)/find")
    public void find() {
        validateRequest(#(first_upper_model_name_without_underline).#(upper_primary_key));

        #(first_upper_model_name_without_underline) model = getModel(#(first_upper_model_name_without_underline).class);

        #(first_upper_model_name_without_underline) result = #(first_upper_model_name_without_underline)Service.instance.find(model.get#(first_upper_primary_key)());

        validateResponse(#for(column : detailColumnList)#(first_upper_model_name_without_underline).#(column.upper_column_name), #end #(first_upper_model_name_without_underline).SYSTEM_VERSION);

        renderSuccessJson(result);
    }

    @ActionKey("/admin/#(url_model_name)/save")
    public void save() {
        validateRequest(#for(column : detailColumnList)#(first_upper_model_name_without_underline).#(column.upper_column_name)#if(!for.last), #end #end);

        #(first_upper_model_name_without_underline) model = getModel(#(first_upper_model_name_without_underline).class);
        model.set#(first_upper_primary_key)(Util.getRandomUUID());
        String request_user_id = getRequest_user_id();

        Boolean result = #(first_upper_model_name_without_underline)Service.instance.save(model, request_user_id);

        renderSuccessJson(result);
    }

    @ActionKey("/admin/#(url_model_name)/update")
    public void update() {
        validateRequest(#(first_upper_model_name_without_underline).#(upper_primary_key), #for(column : detailColumnList)#(first_upper_model_name_without_underline).#(column.upper_column_name), #end #(first_upper_model_name_without_underline).SYSTEM_VERSION);

        #(first_upper_model_name_without_underline) model = getModel(#(first_upper_model_name_without_underline).class);
        String request_user_id = getRequest_user_id();

        Boolean result = #(first_upper_model_name_without_underline)Service.instance.update(model, model.get#(first_upper_primary_key)(), request_user_id, model.getSystem_version());

        renderSuccessJson(result);
    }

    @ActionKey("/admin/#(url_model_name)/delete")
    public void delete() {
        validateRequest(#(first_upper_model_name_without_underline).#(upper_primary_key), #(first_upper_model_name_without_underline).SYSTEM_VERSION);

        #(first_upper_model_name_without_underline) model = getModel(#(first_upper_model_name_without_underline).class);
        String request_user_id = getRequest_user_id();

        Boolean result = #(first_upper_model_name_without_underline)Service.instance.delete(model.get#(first_upper_primary_key)(), request_user_id, model.getSystem_version());

        renderSuccessJson(result);
    }

}