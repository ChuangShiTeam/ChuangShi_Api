<!DOCTYPE html>
<html>
<head lang="zh-cn">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="keywords" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>招生招聘-教师招聘-佛山协同国际学校</title>
    <meta name="Keywords" content="佛山市实验学校,协同学校,佛山市协同学校,佛山协同国际学校">
    <meta name="Description"
          content="佛山市协同（国际）学校，由佛山市实验学校教育集团管理运营，与美国协同教育集团战略合作，是一所国际化、特色化、精英化的学校。国内教育部为小学初中9年一贯制（将开设高中部），国际教育部为幼儿园小学初中高中15年一贯制。秉承“协性同心、和人济世”的教育理念，培养适应现代、走向世界、引领未来的精英人才。">
    <meta name="renderer" content="webkit">
    <meta http-equiv="Cache-Control" content="no-siteapp"/>
    <link rel="stylesheet" href="css/bootstrap.min.css"/>
    <link rel="stylesheet" href="css/style.css"/>
    <script src="js/react.min.js"></script>
    <script src="js/react-dom.min.js"></script>
    <script src="js/browser.min.js"></script>
    <script src="js/react-bootstrap.min.js"></script>
    <script src="js/reqwest.min.js"></script>
    <script src="js/util.js"></script>
    <script src="js/rc-form.min.js"></script>
</head>
<body id="root">
</body>
<script type="text/babel">
    class Component extends React.Component {
        constructor(props) {
            super(props);

            this.state = {
            	is_load: false,
                result_type: "",
                result_message: ""
            }
        }

        componentDidMount() {

        }

        componentWillUnmount() {

        }

        handleLogin() {
            login();
        }

        handleLogout() {
            logout();
        }
        
        handlSubmit() {
            this.props.form.validateFields((errors, values) => {
                if (!!errors) {
                    var message = '';
                    for (var error in errors) {
                        message += "<p>";
                        message += errors[error].errors[0].message;
                        message += "</p>";
                    }
                    this.setState({
                        result_type: 'danger',
                        result_message: message
                    });

                    return;
                }
                values.teacher_recruitment_file = '';
                if (values.teacher_recruitment_is_fresh_graduate === 'true') {
                    values.teacher_recruitment_is_fresh_graduate = true;
                } else {
                    values.teacher_recruitment_is_fresh_graduate = false;
                }
                this.setState({
                    is_load: true,
                    result_type: ""
                });

                request({
                    url: '/mobile/xietong/teacher/recruitment/save',
                    data: values,
                    success: function (data) {
                        this.setState({
                            result_type: 'success',
                            result_message: '提交成功'
                        });
                    }.bind(this),
                    error: function (data) {
                        this.setState({
                            result_type: 'danger',
                            result_message: data.message
                        });
                    }.bind(this),
                    complete: function () {
                        this.setState({
                            is_load: false
                        });
                    }.bind(this)
                });
            });
        }

        handleUpload() {
        }

        render() {
            const {Navbar, Nav, NavItem, NavDropdown, MenuItem, Carousel, Form, FormGroup, Col, FormControl, ControlLabel, Button, Alert, Radio, HelpBlock} = ReactBootstrap;

			const {getFieldProps, getFieldError, getFieldValue} = this.props.form;
			
			const formInstance = (
                    <Form horizontal style={{marginTop: '20px'}}>
                        <FormGroup {...getFieldProps('teacher_recruitment_name', {
                            rules: [{
                                required: true,
                                message: '姓名不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_name') ? 'error' : getFieldValue('teacher_recruitment_name') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                姓名
                            </Col>
                            <Col sm={9}>
                                <FormControl placeholder="请输入姓名"/>
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_name')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_sex', {
                            rules: [{
                                required: true,
                                message: '性别不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_sex') ? 'error' : getFieldValue('teacher_recruitment_sex') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                性别
                            </Col>
                            <Col sm={10}>
                                <Radio name="teacher_recruitment_sex" value="男">
                                    男
                                </Radio>
                                {' '}
                                <Radio name="teacher_recruitment_sex"  value="女">
                                    女
                                </Radio>
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_sex')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_birthday', {
                            rules: [{
                                required: true,
                                message: '出生日期不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_birthday') ? 'error' : getFieldValue('teacher_recruitment_birthday') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                出生日期
                            </Col>
                            <Col sm={9}>
                                <FormControl type="date"  placeholder="请输入出生日期" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_birthday')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_mobile', {
                            rules: [{
                                required: true,
                                message: '手机号码不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_mobile') ? 'error' : getFieldValue('teacher_recruitment_mobile') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                手机号码
                            </Col>
                            <Col sm={9}>
                                <FormControl type="tel" placeholder="请输入手机号码" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_mobile')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_email', {
                            rules: [{
                                required: true,
                                message: '邮箱地址不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_email') ? 'error' : getFieldValue('teacher_recruitment_email') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                邮箱地址
                            </Col>
                            <Col sm={9}>
                                <FormControl type="email" placeholder="请输入邮箱地址" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_mobile')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_faculty', {
                            rules: [{
                                required: true,
                                message: '应聘学部不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_faculty') ? 'error' : getFieldValue('teacher_recruitment_faculty') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                应聘学部
                            </Col>
                            <Col sm={10}>
                                <Radio name="teacher_recruitment_faculty" value="中学部">
                                    中学部
                                </Radio>
                                {' '}
                                <Radio name="teacher_recruitment_faculty" value="小学部">
                                    小学部
                                </Radio>
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_faculty')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_subject', {
                            rules: [{
                                required: true,
                                message: '应聘学科不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_subject') ? 'error' : getFieldValue('teacher_recruitment_subject') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                应聘学科
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入应聘学科" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_subject')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_is_fresh_graduate', {
                            rules: [{
                                required: true,
                                message: '是否应届毕业生不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_is_fresh_graduate') ? 'error' : getFieldValue('teacher_recruitment_is_fresh_graduate') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                是否应届毕业生
                            </Col>
                            <Col sm={9}>
                                <Radio name="teacher_recruitment_is_fresh_graduate" value="true">
                                    是
                                </Radio>
                                {' '}
                                <Radio name="teacher_recruitment_is_fresh_graduate" value="false">
                                    否
                                </Radio>
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_is_fresh_graduate')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_work_year', {initialValue: ''})} >
                            <Col componentClass={ControlLabel} sm={2}>
                                工作年限
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入工作年限" />
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_old_unit', {initialValue: ''})} >
                            <Col componentClass={ControlLabel} sm={2}>
                                原工作单位
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入原工作单位" />
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_politics_status', {
                            rules: [{
                                required: true,
                                message: '政治面貌不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_politics_status') ? 'error' : getFieldValue('teacher_recruitment_politics_status') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                政治面貌
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入政治面貌" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_politics_status')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_job_title', {initialValue: ''})}>
                            <Col componentClass={ControlLabel} sm={2}>
                                职称
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入职称" />
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_education', {
                            rules: [{
                                required: true,
                                message: '学历不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_education') ? 'error' : getFieldValue('teacher_recruitment_education') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                学历
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入学历" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_education')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_major', {
                            rules: [{
                                required: true,
                                message: '专业不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_major') ? 'error' : getFieldValue('teacher_recruitment_major') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                专业
                            </Col>
                            <Col sm={9}>
                                <FormControl type="text" placeholder="请输入专业" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_major')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_grad_school', {
                            rules: [{
                                required: true,
                                message: '毕业院校（本科、硕士）不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_grad_school') ? 'error' : getFieldValue('teacher_recruitment_grad_school') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                毕业院校（本科、硕士）
                            </Col>
                            <Col sm={9}>
                                <FormControl placeholder="请输入毕业院校（本科、硕士）" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_grad_school')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_education_experience', {
                            rules: [{
                                required: true,
                                message: '教育经历不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_education_experience') ? 'error' : getFieldValue('teacher_recruitment_education_experience') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                教育经历
                            </Col>
                            <Col sm={9}>
                                <FormControl componentClass="textarea" />
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_education_experience')}</span>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_work_experience', {initialValue: ''})}>
                            <Col componentClass={ControlLabel} sm={2}>
                                工作经历
                            </Col>
                            <Col sm={9}>
                                <FormControl componentClass="textarea"/>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_representative_honor', {initialValue: ''})}>
                            <Col componentClass={ControlLabel} sm={2}>
                                所获代表性荣誉
                            </Col>
                            <Col sm={9}>
                                <FormControl componentClass="textarea"/>
                            </Col>
                        </FormGroup>
                        <FormGroup {...getFieldProps('teacher_recruitment_now_address', {
                            rules: [{
                                required: true,
                                message: '现住址不能为空'
                            }],
                            initialValue: ''
                        })} validationState={getFieldError('teacher_recruitment_now_address') ? 'error' : getFieldValue('teacher_recruitment_now_address') === '' ? null : 'success'}>
                            <Col componentClass={ControlLabel} sm={2}>
                                现住址
                            </Col>
                            <Col sm={9}>
                                <FormControl componentClass="textarea"/>
                                <FormControl.Feedback />
                                <span className="error-message">{getFieldError('teacher_recruitment_now_address')}</span>
                            </Col>
                        </FormGroup>

                        <FormGroup controlId="teacher_recruitment_file">
                            <Col componentClass={ControlLabel} sm={2}>
                                请上传您的电子版简历
                            </Col>
                            <Col sm={9}>
                                <FormControl type="file" inputRef={ref => {
                                    this.teacher_recruitment_file = ref;
                                }}
                                             onChange={this.handleUpload.bind(this)}
                                />
                                <HelpBlock>(2M以内)</HelpBlock>
                            </Col>
                        </FormGroup>

                        <FormGroup>
                            <Col smOffset={2} sm={9}>
                                <Button disabled={this.state.is_load} onClick={this.handlSubmit.bind(this)}>
                                    {this.state.is_load ? "加载中.." : "提交"}
                                </Button>
                            </Col>
                        </FormGroup>
                        <FormGroup>
                            <Col smOffset={2} sm={9}>
                                {
                                    this.state.result_type == "" ?
                                        ""
                                        :
                                            <Alert bsStyle={this.state.result_type}>
                                                <h4>系统提示</h4>
                                                <div className="margin-top-15"
                                                     dangerouslySetInnerHTML={{__html: this.state.result_message}}></div>
                                            </Alert>
                                }
                            </Col>
                        </FormGroup>
                    </Form>
            );
            return (
                    <div>
                        #include("header.template")
                        #include("banner.template")
                        <div className="main">
                            <div className="container">
                                <div className="row">
                                    <div className="col-md-2 row-clo hidden-sm hidden-xs">
                                        <div className="main-left-title">
                                        	<div className="main-left-title-1">A</div>
                                            <div className="main-left-title-2">招生招聘</div>
                                            <div className="main-left-title-3">DMISSION</div>
                                        </div>
                                        <div className="main-left-menu">
                                        	#for(websiteMenu : websiteMenuList)
							                #if(websiteMenu.website_menu_id == "a8398373a697416eba6847c2e42c781d")
							                #for(websiteMenuChildren : websiteMenu.children)
											<li #if(websiteMenuChildren.website_menu_url == page_url)className="active"#end><a href="/#(websiteMenuChildren.website_menu_url)">#(websiteMenuChildren.website_menu_name)</a></li>
											#end
											#end
											#end
                                        </div>
                                        #include("left_column.template")
                                    </div>
                                    <div className="col-md-10 row-clo">
                                        <div className="main-right-title">
                                           	 #(page_name)
                                            <div className="main-right-title-extra">
                                                <a href="/index.html">首页</a> &gt;<a href="xxbzs.html">招生招聘</a> &gt; <a>教师招聘</a>
                                            </div>
                                        </div>
                                        <div className="main-right-content">
                                        	<div style={{textAlign:'center'}}><h1>教师招聘</h1></div>
                                           	{formInstance}                                    
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        #include("footer.template")
                    </div>
            );
        }
    }
	const Form = window['rc-form'];
    Component = Form.createForm()(Component);
    ReactDOM.render(<Component/>, document.getElementById("root"));
</script>